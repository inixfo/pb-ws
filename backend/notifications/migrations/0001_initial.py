# Generated by Django 4.2.8 on 2025-05-26 14:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification')], max_length=10)),
                ('subject', models.CharField(blank=True, help_text='Subject for email notifications', max_length=255, null=True)),
                ('body', models.TextField(help_text='Template body with placeholders like {{name}}')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SMSProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('provider', models.CharField(choices=[('twilio', 'Twilio'), ('nexmo', 'Nexmo/Vonage'), ('messagebird', 'MessageBird'), ('custom', 'Custom API')], max_length=20)),
                ('api_key', models.CharField(max_length=255)),
                ('api_secret', models.CharField(blank=True, max_length=255, null=True)),
                ('sender_id', models.CharField(blank=True, help_text='Sender ID or phone number', max_length=20, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('config', models.JSONField(blank=True, help_text='Additional configuration as JSON', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('event_type', models.CharField(choices=[('order_created', 'Order Created'), ('order_status_change', 'Order Status Changed'), ('order_shipped', 'Order Shipped'), ('order_delivered', 'Order Delivered'), ('emi_created', 'EMI Created'), ('emi_approved', 'EMI Approved'), ('emi_rejected', 'EMI Rejected'), ('emi_payment_due', 'EMI Payment Due'), ('emi_payment_received', 'EMI Payment Received'), ('emi_payment_late', 'EMI Payment Late'), ('user_registered', 'User Registered'), ('password_reset', 'Password Reset'), ('vendor_approved', 'Vendor Approved'), ('vendor_rejected', 'Vendor Rejected'), ('product_approved', 'Product Approved'), ('product_rejected', 'Product Rejected'), ('low_stock', 'Low Stock Alert')], max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email_template', models.ForeignKey(blank=True, limit_choices_to={'type': 'email'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='email_events', to='notifications.notificationtemplate')),
                ('push_template', models.ForeignKey(blank=True, limit_choices_to={'type': 'push'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='push_events', to='notifications.notificationtemplate')),
                ('sms_template', models.ForeignKey(blank=True, limit_choices_to={'type': 'sms'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sms_events', to='notifications.notificationtemplate')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification')], max_length=10)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('body', models.TextField()),
                ('recipient', models.CharField(help_text='Email address or phone number', max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed')], default='pending', max_length=10)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('provider_message_id', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notifications.notificationtemplate')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
